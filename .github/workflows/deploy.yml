name: deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Update v3 -> v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4 # Update v2 -> v4 (or check latest stable)
        with:
          version: 10

      - name: Install Node.js
        uses: actions/setup-node@v4 # Update v3 -> v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Pages
        uses: actions/configure-pages@v5 # Update v3 -> v5

      - name: Build
        run: pnpm run build

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # configure-pages determines artifact name/settings, no need to specify here usually
          path: 'build/'

  deploy:
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4 # Update v1 -> v4
